-- Script para criar as tabelas relacionadas aos devocionais: likes e coment√°rios
-- Este script cria as tabelas necess√°rias para suportar curtidas e coment√°rios

DO $$
BEGIN
    RAISE NOTICE 'üîç Verificando e criando tabelas relacionadas aos devocionais...';
END $$;

-- Parte 1: Criar tabela devotional_likes (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'devotional_likes') THEN
        RAISE NOTICE 'Criando tabela devotional_likes...';
        
        CREATE TABLE public.devotional_likes (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            devotional_id UUID NOT NULL,
            user_id UUID NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            CONSTRAINT devotional_likes_devotional_fkey FOREIGN KEY (devotional_id) 
                REFERENCES public.devotionals(id) ON DELETE CASCADE,
            CONSTRAINT devotional_likes_user_fkey FOREIGN KEY (user_id) 
                REFERENCES public.users(id) ON DELETE CASCADE,
            CONSTRAINT devotional_likes_unique UNIQUE (devotional_id, user_id)
        );
        
        -- Adicionar coment√°rio para o PostgREST entender as rela√ß√µes
        COMMENT ON TABLE public.devotional_likes IS 'Likes em devocionais pelos usu√°rios';
        COMMENT ON COLUMN public.devotional_likes.devotional_id IS 'references:devotionals.id';
        COMMENT ON COLUMN public.devotional_likes.user_id IS 'references:users.id';
        
        -- Criar √≠ndices para melhorar performance
        CREATE INDEX idx_devotional_likes_devotional_id ON public.devotional_likes(devotional_id);
        CREATE INDEX idx_devotional_likes_user_id ON public.devotional_likes(user_id);
        
        RAISE NOTICE 'Tabela devotional_likes criada com sucesso!';
    ELSE
        RAISE NOTICE 'Tabela devotional_likes j√° existe.';
    END IF;
END $$;

-- Parte 2: Criar tabela devotional_comments (se n√£o existir)
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'devotional_comments') THEN
        RAISE NOTICE 'Criando tabela devotional_comments...';
        
        CREATE TABLE public.devotional_comments (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            devotional_id UUID NOT NULL,
            user_id UUID NOT NULL,
            content TEXT NOT NULL,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            CONSTRAINT devotional_comments_devotional_fkey FOREIGN KEY (devotional_id) 
                REFERENCES public.devotionals(id) ON DELETE CASCADE,
            CONSTRAINT devotional_comments_user_fkey FOREIGN KEY (user_id) 
                REFERENCES public.users(id) ON DELETE CASCADE
        );
        
        -- Adicionar coment√°rio para o PostgREST entender as rela√ß√µes
        COMMENT ON TABLE public.devotional_comments IS 'Coment√°rios em devocionais pelos usu√°rios';
        COMMENT ON COLUMN public.devotional_comments.devotional_id IS 'references:devotionals.id';
        COMMENT ON COLUMN public.devotional_comments.user_id IS 'references:users.id';
        
        -- Criar √≠ndices para melhorar performance
        CREATE INDEX idx_devotional_comments_devotional_id ON public.devotional_comments(devotional_id);
        CREATE INDEX idx_devotional_comments_user_id ON public.devotional_comments(user_id);
        CREATE INDEX idx_devotional_comments_created_at ON public.devotional_comments(created_at);
        
        RAISE NOTICE 'Tabela devotional_comments criada com sucesso!';
    ELSE
        RAISE NOTICE 'Tabela devotional_comments j√° existe.';
    END IF;
END $$;

-- Parte 3: Configurar RLS (Row Level Security) para as tabelas
DO $$
BEGIN
    RAISE NOTICE 'Configurando pol√≠ticas de seguran√ßa (RLS)...';
    
    -- Habilitar RLS para as tabelas
    ALTER TABLE public.devotional_likes ENABLE ROW LEVEL SECURITY;
    ALTER TABLE public.devotional_comments ENABLE ROW LEVEL SECURITY;
    
    -- Remover pol√≠ticas existentes para evitar duplica√ß√µes
    DROP POLICY IF EXISTS "Qualquer pessoa pode ver curtidas" ON public.devotional_likes;
    DROP POLICY IF EXISTS "Usu√°rios autenticados podem curtir" ON public.devotional_likes;
    DROP POLICY IF EXISTS "Usu√°rios podem remover suas pr√≥prias curtidas" ON public.devotional_likes;
    
    DROP POLICY IF EXISTS "Qualquer pessoa pode ver coment√°rios" ON public.devotional_comments;
    DROP POLICY IF EXISTS "Usu√°rios autenticados podem comentar" ON public.devotional_comments;
    DROP POLICY IF EXISTS "Usu√°rios podem editar seus pr√≥prios coment√°rios" ON public.devotional_comments;
    DROP POLICY IF EXISTS "Usu√°rios podem excluir seus pr√≥prios coment√°rios" ON public.devotional_comments;
    DROP POLICY IF EXISTS "Admins podem gerenciar qualquer coment√°rio" ON public.devotional_comments;
    
    -- Criar pol√≠ticas para devotional_likes
    CREATE POLICY "Qualquer pessoa pode ver curtidas" 
        ON public.devotional_likes FOR SELECT 
        USING (true);
    
    CREATE POLICY "Usu√°rios autenticados podem curtir" 
        ON public.devotional_likes FOR INSERT 
        WITH CHECK (auth.uid() = user_id);
    
    CREATE POLICY "Usu√°rios podem remover suas pr√≥prias curtidas" 
        ON public.devotional_likes FOR DELETE 
        USING (auth.uid() = user_id);
    
    -- Criar pol√≠ticas para devotional_comments
    CREATE POLICY "Qualquer pessoa pode ver coment√°rios" 
        ON public.devotional_comments FOR SELECT 
        USING (true);
    
    CREATE POLICY "Usu√°rios autenticados podem comentar" 
        ON public.devotional_comments FOR INSERT 
        WITH CHECK (auth.uid() = user_id);
    
    CREATE POLICY "Usu√°rios podem editar seus pr√≥prios coment√°rios" 
        ON public.devotional_comments FOR UPDATE 
        USING (auth.uid() = user_id);
    
    CREATE POLICY "Usu√°rios podem excluir seus pr√≥prios coment√°rios" 
        ON public.devotional_comments FOR DELETE 
        USING (auth.uid() = user_id);
    
    CREATE POLICY "Admins podem gerenciar qualquer coment√°rio" 
        ON public.devotional_comments 
        USING (
            EXISTS (
                SELECT 1 FROM public.users
                WHERE id = auth.uid() AND role = 'admin'
            )
        );
    
    RAISE NOTICE 'Pol√≠ticas de seguran√ßa configuradas com sucesso!';
END $$;

-- Parte 4: Criar fun√ß√µes auxiliares para trabalhar com likes e coment√°rios
DO $$
BEGIN
    RAISE NOTICE 'Criando fun√ß√µes auxiliares para likes e coment√°rios...';
    
    -- Fun√ß√£o para contar curtidas de um devocional
    CREATE OR REPLACE FUNCTION count_devotional_likes(p_devotional_id UUID)
    RETURNS INTEGER
    LANGUAGE plpgsql
    AS $$
    DECLARE
        v_count INTEGER;
    BEGIN
        SELECT COUNT(*) INTO v_count
        FROM public.devotional_likes
        WHERE devotional_id = p_devotional_id;
        
        RETURN v_count;
    END;
    $$;
    
    -- Fun√ß√£o para verificar se um usu√°rio curtiu um devocional
    CREATE OR REPLACE FUNCTION has_user_liked_devotional(p_devotional_id UUID, p_user_id UUID)
    RETURNS BOOLEAN
    LANGUAGE plpgsql
    AS $$
    DECLARE
        v_exists BOOLEAN;
    BEGIN
        SELECT EXISTS (
            SELECT 1
            FROM public.devotional_likes
            WHERE devotional_id = p_devotional_id AND user_id = p_user_id
        ) INTO v_exists;
        
        RETURN v_exists;
    END;
    $$;
    
    -- Fun√ß√£o para adicionar coment√°rio
    CREATE OR REPLACE FUNCTION add_devotional_comment(
        p_devotional_id UUID,
        p_user_id UUID,
        p_content TEXT
    )
    RETURNS UUID
    LANGUAGE plpgsql
    SECURITY DEFINER
    AS $$
    DECLARE
        v_comment_id UUID;
    BEGIN
        INSERT INTO public.devotional_comments (
            devotional_id,
            user_id,
            content
        ) VALUES (
            p_devotional_id,
            p_user_id,
            p_content
        ) RETURNING id INTO v_comment_id;
        
        RETURN v_comment_id;
    END;
    $$;
    
    -- Conceder permiss√µes para as fun√ß√µes
    GRANT EXECUTE ON FUNCTION count_devotional_likes(UUID) TO authenticated;
    GRANT EXECUTE ON FUNCTION count_devotional_likes(UUID) TO anon;
    
    GRANT EXECUTE ON FUNCTION has_user_liked_devotional(UUID, UUID) TO authenticated;
    GRANT EXECUTE ON FUNCTION has_user_liked_devotional(UUID, UUID) TO anon;
    
    GRANT EXECUTE ON FUNCTION add_devotional_comment(UUID, UUID, TEXT) TO authenticated;
    GRANT EXECUTE ON FUNCTION add_devotional_comment(UUID, UUID, TEXT) TO anon;
    
    RAISE NOTICE 'Fun√ß√µes auxiliares criadas com sucesso!';
END $$;

-- Parte 5: Verificar que as tabelas e fun√ß√µes foram criadas
SELECT 
    table_name, 
    table_type
FROM 
    information_schema.tables
WHERE 
    table_schema = 'public' 
    AND table_name IN ('devotional_likes', 'devotional_comments')
ORDER BY 
    table_name;

SELECT 
    routine_name,
    routine_type,
    data_type AS return_type
FROM 
    information_schema.routines
WHERE 
    routine_schema = 'public'
    AND routine_name IN ('count_devotional_likes', 'has_user_liked_devotional', 'add_devotional_comment')
ORDER BY 
    routine_name;

-- Resumo final
DO $$
BEGIN
    RAISE NOTICE '
‚úÖ Script de cria√ß√£o de tabelas relacionadas executado com sucesso!

As seguintes estruturas foram criadas ou verificadas:

1. Tabelas:
   - devotional_likes: Para armazenar curtidas em devocionais
   - devotional_comments: Para armazenar coment√°rios em devocionais

2. √çndices:
   - √çndices para melhorar o desempenho de consultas por devotional_id e user_id
   
3. Pol√≠ticas de Seguran√ßa (RLS):
   - Configuradas para permitir visualiza√ß√£o p√∫blica
   - Restri√ß√µes adequadas para inser√ß√£o, atualiza√ß√£o e exclus√£o

4. Fun√ß√µes Auxiliares:
   - count_devotional_likes(devotional_id): Conta likes de um devocional
   - has_user_liked_devotional(devotional_id, user_id): Verifica se um usu√°rio curtiu um devocional
   - add_devotional_comment(devotional_id, user_id, content): Adiciona um coment√°rio

Para testar, execute:
SELECT count_devotional_likes(''UUID_DE_UM_DEVOCIONAL'');
';
END $$; 